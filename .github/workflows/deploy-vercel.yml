name: CI/CD Radar Econômico USD/BRL

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Clonar repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3️⃣ Configurar pnpm (garante que está no PATH)
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8 # ajuste para a versão do seu projeto

      # 4️⃣ Cache das dependências do pnpm
      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: pnpm-store-

      # 5️⃣ Instalar dependências
      - name: Install dependencies
        run: pnpm install

      # 6️⃣ Cache do build do Next.js
      - name: Cache .next
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: next-cache-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}
          restore-keys: next-cache-

      # 7️⃣ Lint do projeto
      - name: Lint project
        run: pnpm lint

      # 8️⃣ Build do Next.js
      - name: Build project
        run: pnpm build

      # 9️⃣ Rodar testes
      - name: Run tests
        run: pnpm test || echo "No tests found, skipping"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Clonar repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3️⃣ Configurar pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      # 4️⃣ Restaurar cache do pnpm
      - name: Restore pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: pnpm-store-

      # 5️⃣ Restaurar cache do .next
      - name: Restore .next cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: next-cache-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}
          restore-keys: next-cache-

      # 6️⃣ Instalar dependências rapidamente
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 7️⃣ Start em produção
      - name: Start production
        run: pnpm start

      # 8️⃣ Vercel deploy
      - name: Deploy to Vercel
        run: |
          npx vercel deploy \
            --prod \
            --confirm \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --scope=${{ secrets.VERCEL_ORG_ID }} \
            --project=${{ secrets.VERCEL_PROJECT_ID }}
            
